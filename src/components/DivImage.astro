---
import type { GetImageResult, UnresolvedImageTransform } from "astro";
import { getImage } from "astro:assets";

interface Props {
    options: UnresolvedImageTransform;
    classList?: string[] | string;
    rest?: [];
    useOptimizedImgHeight?: boolean;
    useOptimizedImgwidth?: boolean;
}
const {
    options,
    classList = "",
    useOptimizedImgHeight = false,
    useOptimizedImgwidth = false,
    ...rest
} = Astro.props;
var optimizedImage: GetImageResult | undefined;
try {
    optimizedImage = await getImage({
        ...options,
        formate: "webp",
    });
} catch (error) {}
---

{
    optimizedImage && (
        <div
            class:list={
                classList +
                (useOptimizedImgwidth
                    ? ` w-[${optimizedImage.attributes.width}px] `
                    : "") +
                (useOptimizedImgHeight
                    ? ` h-[${optimizedImage.attributes.height}px] `
                    : "")
            }
            data-background-image={optimizedImage.src}
            {...rest}
        >
            <slot />
        </div>
    )
}
