---
import { Icon } from "astro-icon/components";
import type { CollectionEntry } from "astro:content";
import DivImage from "./DivImage.astro";

interface Props {
    projectEntry: CollectionEntry<"projects">;
    classList?: string;
    rest?: any;
}
const { projectEntry, classList, ...rest } = Astro.props;
const project = projectEntry.data;
const mainImage = project.images.at(0);
---

<div class:list={classList} class="card card-compact my-0 mb-8" {...rest}>
    {
        mainImage && (
            <DivImage
                useOptimizedImgHeight={true}
                classList="rounded-md bg-clip-border h-[200px] lg:h-[240px] bg-no-repeat bg-contain sm:bg-cover bg-center  w-full hover:grayscale duration-700"
                options={{
                    src: mainImage,
                    height: 700,
                    quality: 100,
                    inferSize: true,
                }}
            />
        )
    }
    <div class="card-body gap-2" style="padding: 0;">
        <div class="flex items-center justify-between my-3 lg:my-5">
            <div class="text-left">
                <h1
                    class="capitalize card-title font-extrabold tracking-tighter md:text-xl"
                >
                    {project.title}
                </h1>
            </div>
            <div class="flex">
                {
                    project.links.map((link) => (
                        <a
                            class="btn lg:btn-link dark:text-accent bg-base-200 hover:btn-outline"
                            target="_blank"
                            href={link.url}
                        >
                            {link.label}
                            <Icon
                                color="currentColor"
                                name="carbon:arrow-up-right"
                                class=" mr-1"
                            />
                        </a>
                    ))
                }
            </div>
        </div>

        <article class="prose max-w-[90%]">
            <Fragment set:html={projectEntry.body} />
        </article>
        <div class="flex gap-2 my-4 flex-wrap content-around">
            {
                project.tags.map((tag) => (
                    <div class="badge badge-ghost  text-center p-3  align-middle ">
                        {tag}
                    </div>
                ))
            }
        </div>
    </div>
</div>
